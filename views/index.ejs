<!DOCTYPE html>
<html lang="en">
<head>
  <title><%= title %></title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.2/dist/js/bootstrap.bundle.min.js"></script>

  <style>
    #chartdiv1 {
      width: 100%;
      height: 500px;
    }
    #chartdiv2 {
      width: 100%;
      height: 500px;
    }
    #chartdiv3 {
      width: 100%;
      height: 500px;
    }
    #chartdiv4 {
      width: 100%;
      height: 500px;
    }
  </style>

  <!-- Resources -->
<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
<!-- Chart code -->
<script>
  am5.ready(function() {
  
  // Create root element
  // https://www.amcharts.com/docs/v5/getting-started/#Root_element
  var root = am5.Root.new("chartdiv2");
  
  
  // Set themes
  // https://www.amcharts.com/docs/v5/concepts/themes/
  root.setThemes([
    am5themes_Animated.new(root)
  ]);
  
  
  // Generate random data
var value = 100;



var data = JSON.parse('<%- data2 %>');


// Create chart
// https://www.amcharts.com/docs/v5/charts/xy-chart/
var chart = root.container.children.push(am5xy.XYChart.new(root, {
  focusable: true,
  panX: true,
  panY: true,
  wheelX: "panX",
  wheelY: "zoomX"
}));

var easing = am5.ease.linear;


// Create axes
// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
var xAxis = chart.xAxes.push(am5xy.DateAxis.new(root, {
  maxDeviation: 0.5,
  groupData: false,
  extraMax:0.1, // this adds some space in front
  extraMin:-0.1,  // this removes some space form th beginning so that the line would not be cut off
  baseInterval: {
    timeUnit: "second",
    count: 1
  },
  renderer: am5xy.AxisRendererX.new(root, {
    minGridDistance: 50
  }),
  tooltip: am5.Tooltip.new(root, {})
}));

var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
  renderer: am5xy.AxisRendererY.new(root, {})
}));


// Add series
// https://www.amcharts.com/docs/v5/charts/xy-chart/series/
var series = chart.series.push(am5xy.LineSeries.new(root, {
  name: "Series 1",
  xAxis: xAxis,
  yAxis: yAxis,
  valueYField: "value",
  valueXField: "date",
  tooltip: am5.Tooltip.new(root, {
    pointerOrientation: "horizontal",
    labelText: "{valueY}"
  })
}));

// tell that the last data item must create bullet
data[data.length - 1].bullet = true;
series.data.setAll(data);


// Create animating bullet by adding two circles in a bullet container and
// animating radius and opacity of one of them.
series.bullets.push(function(root, series, dataItem) {  
  // only create sprite if bullet == true in data context
  if (dataItem.dataContext.bullet) {    
    var container = am5.Container.new(root, {});
    var circle0 = container.children.push(am5.Circle.new(root, {
      radius: 5,
      fill: am5.color(0xff0000)
    }));
    var circle1 = container.children.push(am5.Circle.new(root, {
      radius: 5,
      fill: am5.color(0xff0000)
    }));

    circle1.animate({
      key: "radius",
      to: 20,
      duration: 1000,
      easing: am5.ease.out(am5.ease.cubic),
      loops: Infinity
    });
    circle1.animate({
      key: "opacity",
      to: 0,
      from: 1,
      duration: 1000,
      easing: am5.ease.out(am5.ease.cubic),
      loops: Infinity
    });

    return am5.Bullet.new(root, {
      locationX:undefined,
      sprite: container
    })
  }
})


// Add cursor
// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/
var cursor = chart.set("cursor", am5xy.XYCursor.new(root, {
  xAxis: xAxis
}));
cursor.lineY.set("visible", false);


// Update data every second
// setInterval(function () {
//   addData();
// }, 5000)


function addData() {
  var lastDataItem = series.dataItems[series.dataItems.length - 1];

  var lastValue = lastDataItem.get("valueY");
  var newValue = value + ((Math.random() < 0.5 ? 1 : -1) * Math.random() * 5);
  var lastDate = new Date(lastDataItem.get("valueX"));
  var time = am5.time.add(new Date(lastDate), "second", 1).getTime();
  series.data.removeIndex(0);
  series.data.push({
    date: time,
    value: newValue
  })

  var newDataItem = series.dataItems[series.dataItems.length - 1];
  newDataItem.animate({
    key: "valueYWorking",
    to: newValue,
    from: lastValue,
    duration: 600,
    easing: easing
  });

  // use the bullet of last data item so that a new sprite is not created
  newDataItem.bullets = [];
  newDataItem.bullets[0] = lastDataItem.bullets[0];
  newDataItem.bullets[0].get("sprite").dataItem = newDataItem;
  // reset bullets
  lastDataItem.dataContext.bullet = false;
  lastDataItem.bullets = [];


  var animation = newDataItem.animate({
    key: "locationX",
    to: 0.5,
    from: -0.5,
    duration: 600
  });
  if (animation) {
    var tooltip = xAxis.get("tooltip");
    if (tooltip && !tooltip.isHidden()) {
      animation.events.on("stopped", function () {
        xAxis.updateTooltip();
      })
    }
  }
}


// Make stuff animate on load
// https://www.amcharts.com/docs/v5/concepts/animations/
chart.appear(1000, 100);
  
  }); // end am5.ready()
  </script>
</head>
<body>

<div class="container-fluid p-5 bg-primary text-white text-center">
  <h1>아쿠아프로(하동)</h1>
</div>
  
<div class="container mt-5">
  <div class="row">
    <div class="col-sm-3">
      <h3>이상덕</h3>
      <p> SALT : <%= salts['263fc2d1-281f-dc0c-4e5e-437145d8ed70'][1] %> ppm </p>
      <p> TEMP : <%= temperature['263fc2d1-281f-dc0c-4e5e-437145d8ed70'][1] %> ℃ </p>
      <p> BATT : <%= battery['263fc2d1-281f-dc0c-4e5e-437145d8ed70'][1] %> % </p>
    </div>
    <div class="col-sm-3">
      <h3>박민영</h3>
      <p> SALT : <%= salts['67212109-a88b-8600-9727-40624e324396'][1] %> ppm </p>
      <p> TEMP : <%= temperature['67212109-a88b-8600-9727-40624e324396'][1] %> ℃ </p>
      <p> BATT : <%= battery['67212109-a88b-8600-9727-40624e324396'][1] %> % </p>
    </div>
    <div class="col-sm-3">
      <h3>전충진</h3>        
      <p> SALT : <%= salts['c04c7bda-9093-770c-fc73-4317574038ce'][1] %> ppm </p>
      <p> TEMP : <%= temperature['c04c7bda-9093-770c-fc73-4317574038ce'][1] %> ℃ </p>
      <p> BATT : <%= battery['c04c7bda-9093-770c-fc73-4317574038ce'][1] %> % </p>
    </div>
    <div class="col-sm-3">
      <h3>고영훈</h3>        
      <p> SALT : <%= salts['263fc2d1-281f-dc0c-4e5e-437145d8ed70'][1] %> ppm </p>
      <p> TEMP : <%= temperature['263fc2d1-281f-dc0c-4e5e-437145d8ed70'][1] %> ℃ </p>
      <p> BATT : <%= battery['263fc2d1-281f-dc0c-4e5e-437145d8ed70'][1] %> % </p>
    </div>
  </div>

  <div class="row">
    <h2>이상덕 SALT</h2>
    <div id="chartdiv1"></div>
  </div>
  <div class="row">
    <h2>박민영 SALT</h2>
    <div id="chartdiv2"></div>
  </div>
  <div class="row">
    <h2>전충진 SALT</h2>
    <div id="chartdiv3"></div>
  </div>
  <div class="row">
    <h2>고영훈 SALT</h2>
    <div id="chartdiv4"></div>
  </div>
</div>

</body>
</html>
